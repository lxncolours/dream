<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dream.server.mapper.StockMapper">
  <resultMap id="BaseResultMap" type="com.dream.server.domain.Stock">
    <id column="stock_id" jdbcType="INTEGER" property="stockId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="stock_date" jdbcType="TIMESTAMP" property="stockDate" />
    <result column="in_price" jdbcType="DECIMAL" property="inPrice" />
    <result column="in_num" jdbcType="INTEGER" property="inNum" />
    <result column="in_money" jdbcType="DECIMAL" property="inMoney" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
  </resultMap>
  <sql id="Base_Column_List">
    stock_id, goods_id, stock_date, in_price, in_num, in_money, stock_num
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock
    where stock_id = #{stockId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dream.server.domain.Stock">
    <selectKey keyProperty="stockId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock (goods_id, stock_date, in_price, 
      in_num, in_money, stock_num
      )
    values (#{goodsId,jdbcType=INTEGER}, #{stockDate,jdbcType=TIMESTAMP}, #{inPrice,jdbcType=DECIMAL}, 
      #{inNum,jdbcType=INTEGER}, #{inMoney,jdbcType=DECIMAL}, #{stockNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dream.server.domain.Stock">
    <selectKey keyProperty="stockId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="stockDate != null">
        stock_date,
      </if>
      <if test="inPrice != null">
        in_price,
      </if>
      <if test="inNum != null">
        in_num,
      </if>
      <if test="inMoney != null">
        in_money,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="stockDate != null">
        #{stockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inPrice != null">
        #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="inNum != null">
        #{inNum,jdbcType=INTEGER},
      </if>
      <if test="inMoney != null">
        #{inMoney,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dream.server.domain.Stock">
    update stock
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="stockDate != null">
        stock_date = #{stockDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inPrice != null">
        in_price = #{inPrice,jdbcType=DECIMAL},
      </if>
      <if test="inNum != null">
        in_num = #{inNum,jdbcType=INTEGER},
      </if>
      <if test="inMoney != null">
        in_money = #{inMoney,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
    </set>
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dream.server.domain.Stock">
    update stock
    set goods_id = #{goodsId,jdbcType=INTEGER},
      stock_date = #{stockDate,jdbcType=TIMESTAMP},
      in_price = #{inPrice,jdbcType=DECIMAL},
      in_num = #{inNum,jdbcType=INTEGER},
      in_money = #{inMoney,jdbcType=DECIMAL},
      stock_num = #{stockNum,jdbcType=INTEGER}
    where stock_id = #{stockId,jdbcType=INTEGER}
  </update>
</mapper>